@model Project_try3.Models.Orders
    @using Project_try3.Models

@{
    ViewBag.Title = "Create";
    var memName = ((Users)Session["user"]).Members.FirstOrDefault().Name;
}

<h2>結帳</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Orders</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @*<div class="form-group">
            @Html.LabelFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.PaySN, "PaySN", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.DropDownList("PaySN", null, htmlAttributes: new { @class = "form-control" })*@
            <select class="form-control" id="PaySN" name="PaySN">
                <option value="1">現金支付</option>
                <option value="2">線上刷卡</option>
                </select>
                @Html.ValidationMessageFor(model => model.PaySN, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.Payed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Payed)
                    @Html.ValidationMessageFor(model => model.Payed, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@
    <div class="form-group">
        @Html.LabelFor(model => model.CustomerSN, "訂購人", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="text" value=@memName class="form-control" readonly="readonly" />
            @Html.ValidationMessageFor(model => model.GroupBuying.CreatedPerson, "", new { @class = "text-danger" })
        </div>
    </div>
    @*<div class="form-group">
        @Html.LabelFor(model => model.CustomerSN, "收件人姓名", htmlAttributes: new { @class = "control-label col-md-2" })
            <input type="text" value="" class="form-control" />
            @Html.ValidationMessageFor(model => model.CustomerSN, "", new { @class = "text-danger" })
        </div>*@
  


    <div class="form-group">
        @Html.LabelFor(model => model.GroupBuyingID, "GroupBuyingID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.DropDownList("GroupBuyingID", null, htmlAttributes: new { @class = "form-control" })*@
            <input class="form-control" id="GroupBuyingID" name="GroupBuyingID" value=""  />
            @Html.ValidationMessageFor(model => model.GroupBuyingID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
<input id="cartData" name="cartData" type="hidden" />
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script>
console.log(localStorage.getItem("cart"))
       
        if (localStorage.getItem("cart")) {
            $('#cartData').val(localStorage.getItem("cart"))
        }
      
        var cartItem = JSON.parse(localStorage.getItem("cart"));

        $('#GroupBuyingID').val(cartItem[0].GPID)

    </script>
