@model Project_try3.Models.GroupBuying
@using Project_try3.Models
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    //string storeSN = Request.QueryString["storeSN"];
    //int memID = ((Members)Session["user"]).SN;
    var memName = ((Users)Session["user"]).Members.FirstOrDefault().Name;


}

<div>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">


            @*<a>邀請朋友加入團購</a>     直接把頁面帶給order讓他人點選後加入購物車，可用tempdata先暫存*@
            <h4>建立團購資料</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            <div class="form-group">
                @Html.LabelFor(model => model.StoreSN, "選擇餐廳", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.DropDownList("StoreSN", null, htmlAttributes: new { @class = "form-control" })*@
                    @*@Html.EditorFor(model => model.StoreSN, new { htmlAttributes = new { @class = "form-control",@readonly="readonly",@value=ViewBag.storeSN } })*@
                    <input id="storeSN" name="storeSN" class="form-control" value="@ViewBag.storeSN" hidden />
                    <input value="@ViewBag.StoreName" class="form-control" readonly="readonly" />
                    @Html.ValidationMessageFor(model => model.StoreSN, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.Startdate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Startdate, new { htmlAttributes = new { @class = "form-control", @type = "datetime-local" } })
                    @Html.ValidationMessageFor(model => model.Startdate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CreatedPerson, "開團人姓名", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.CreatedPerson, new { id = Model.CreatedPerson }, new { value=memName})*@
                    <input type="text" value=@memName class="form-control" readonly="readonly" />
                    @Html.ValidationMessageFor(model => model.CreatedPerson, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RequireDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RequireDate, new { htmlAttributes = new { @class = "form-control", @type = "datetime-local" } })
                    @Html.ValidationMessageFor(model => model.RequireDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CloseDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CloseDate, new { htmlAttributes = new { @class = "form-control", @type = "datetime-local" } })
                    @Html.ValidationMessageFor(model => model.CloseDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ShipAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.ShipAddress, new { htmlAttributes = new { @class = "form-control" } })*@
                    <div class="tw-city-selector" role="tw-city-selector" id="addressSelector" data-has-zipcode></div>
                    <input onclick="test()" class="form-control text-box single-line" data-val="true" data-val-required="送貨地址 欄位是必要項。"
                           id="ShipAddress" name="ShipAddress" type="text" value="" />
                    @Html.ValidationMessageFor(model => model.ShipAddress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DeliverySN, "DeliverySN", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("DeliverySN", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DeliverySN, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LimitMoney, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LimitMoney, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LimitMoney, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LimitNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LimitNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LimitNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Continued, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Continued)
                        @Html.ValidationMessageFor(model => model.Continued, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PaySN, "付款方式", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("PaySN", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PaySN, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                  
                    <input type="submit" value="確定開團" class="btn btn-success" />
                </div>
            </div>
        </div>
    }

</div>
<div class="btn btn-secondary ">
    <i class="bi bi-chevron-double-left"></i>
    <a href=@Url.Action("Details", "Stores", new { id=ViewBag.storeSN}) class="text-light">
        返回店家資訊
    </a>
    @*@Html.ActionLink("返回店家資訊", "Details", "Stores", new { id = ViewBag.storeSN }, new {@class= "btn btn-outline-secondary" })*@
</div>

@section css{
    <style>

        .tw-city-selector select, input {
            border-radius: 3px;
            border: 1px solid #0879cb;
            font-size: 13pt;
            color: #0879cb;
        }

        .tw-city-selector input {
            width:max-content;
        }
    </style>
}
@section script{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jquery@3.4.1/dist/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/tw-city-selector@2.1.1/dist/tw-city-selector.min.js"></script>
    <script>
        new TwCitySelector()
        let test = () => {
            const container = $("#addressSelector")

            const county = container.find(".county")
            const district = container.find(".district")
            const zipcode = container.find(".zipcode")
         
            let address = zipcode.val() + county.val() + district.val()
            $("#ShipAddress").val(address)
        }

    </script>
}